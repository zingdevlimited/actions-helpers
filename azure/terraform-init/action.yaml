name: "Initiate Terraform Azure"
description: "Initiate Terraform with Azure Storage Account Backend"
inputs:
  AZ_CLIENT_ID:
    required: true
    description: The Azure Client ID of the Managed Identity
  AZ_TENANT_ID:
    required: true
    description: The Azure Tenant ID
  AZ_SUBSCRIPTION_ID:
    required: true
    description: The Azure Subscription ID
  STORAGE_ACCOUNT_RESOURCEGROUP:
    required: true
    description: The Resource Group of the Terraform State Storage Account
  STORAGE_ACCOUNT_NAME:
    required: true
    description: The Terraform State Storage Account
  STORAGE_ACCOUNT_CONTAINER:
    required: true
    description: The Terraform State Storage Container
  STORAGE_BLOB_NAME:
    required: false
    description: The Terraform State Blob Key stored under the Container
    default: terraform.tfstate
  TERRAFORM_DIRECTORY:
    required: true
    description: The path to the Terraform root directory

runs:
  using: composite
  steps:

  - name: Validate Inputs
    shell: bash
    run: |
      fail=""
      [[ -z "${{ inputs.AZ_CLIENT_ID }}" ]] && echo "::error::Missing AZ_CLIENT_ID in inputs" && fail=1
      [[ -z "${{ inputs.AZ_TENANT_ID }}" ]] && echo "::error::Missing AZ_TENANT_ID in inputs" && fail=1
      [[ -z "${{ inputs.AZ_SUBSCRIPTION_ID }}" ]] && echo "::error::Missing AZ_SUBSCRIPTION_ID in inputs" && fail=1
      [[ -z "${{ inputs.STORAGE_ACCOUNT_RESOURCEGROUP }}" ]] && echo "::error::Missing STORAGE_ACCOUNT_RESOURCEGROUP in inputs" && fail=1
      [[ -z "${{ inputs.STORAGE_ACCOUNT_NAME }}" ]] && echo "::error::Missing STORAGE_ACCOUNT_NAME in inputs" && fail=1
      [[ -z "${{ inputs.STORAGE_ACCOUNT_CONTAINER }}" ]] && echo "::error::Missing STORAGE_ACCOUNT_CONTAINER in inputs" && fail=1
      [[ -z "${{ inputs.STORAGE_BLOB_NAME }}" ]] && echo "::error::Missing STORAGE_BLOB_NAME in inputs" && fail=1
      [[ -z "${{ inputs.TERRAFORM_DIRECTORY }}" ]] && echo "::error::Missing TERRAFORM_DIRECTORY in inputs" && fail=1

      [[ -n "$fail" ]] && exit 1 || exit 0

  - name: Setup Terraform
    uses: hashicorp/setup-terraform@v4
    with:
      terraform_wrapper: false

  - name: Terraform Init
    shell: bash
    working-directory: ${{ inputs.TERRAFORM_DIRECTORY }}
    run: |
      terraform init \
        --backend-config="tenant_id=${{ inputs.AZ_TENANT_ID }}" \
        --backend-config="client_id=${{ inputs.AZ_CLIENT_ID }}" \
        --backend-config="subscription_id=${{ inputs.AZ_SUBSCRIPTION_ID }}" \
        --backend-config="resource_group_name=${{ inputs.STORAGE_ACCOUNT_RESOURCEGROUP }}" \
        --backend-config="storage_account_name=${{ inputs.STORAGE_ACCOUNT_NAME }}" \
        --backend-config="container_name=${{ inputs.STORAGE_ACCOUNT_CONTAINER }}" \
        --backend-config="key=${{ inputs.STORAGE_BLOB_NAME }}"

  - name: Terraform Validate
    shell: bash
    working-directory: ${{ inputs.TERRAFORM_DIRECTORY }}
    run: terraform validate
